version: '3.8'

services:
  # Laravel Application
  app:
    build: .
    container_name: smk4-web-app
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./.env:/var/www/html/.env
    depends_on:
      - mysql
    networks:
      - smk4-network
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_DATABASE=db_presensi
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=laravel_password

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: smk4-web-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      MYSQL_DATABASE: db_presensi
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
      MYSQL_ROOT_PASSWORD: root_password
    networks:
      - smk4-network
    command: --default-authentication-plugin=mysql_native_password

  # phpMyAdmin (optional, untuk management database)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: smk4-web-phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
      MYSQL_ROOT_PASSWORD: root_password
    depends_on:
      - mysql
    networks:
      - smk4-network

  # Redis (optional, untuk cache dan session)
  redis:
    image: redis:7-alpine
    container_name: smk4-web-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - smk4-network

networks:
  smk4-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local